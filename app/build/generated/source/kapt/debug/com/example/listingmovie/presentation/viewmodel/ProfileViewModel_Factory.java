// Generated by Dagger (https://dagger.dev).
package com.example.listingmovie.presentation.viewmodel;

import android.content.Context;
import com.example.data.local.UserDataStoreManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ProfileViewModel_Factory implements Factory<ProfileViewModel> {
  private final Provider<UserDataStoreManager> prefProvider;

  private final Provider<Context> contextProvider;

  public ProfileViewModel_Factory(Provider<UserDataStoreManager> prefProvider,
      Provider<Context> contextProvider) {
    this.prefProvider = prefProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public ProfileViewModel get() {
    return newInstance(prefProvider.get(), contextProvider.get());
  }

  public static ProfileViewModel_Factory create(Provider<UserDataStoreManager> prefProvider,
      Provider<Context> contextProvider) {
    return new ProfileViewModel_Factory(prefProvider, contextProvider);
  }

  public static ProfileViewModel newInstance(UserDataStoreManager pref, Context context) {
    return new ProfileViewModel(pref, context);
  }
}
